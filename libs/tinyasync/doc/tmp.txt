
好，现在呢我来解决这一个tiny sync他的代码的架构。

怎么去理解？这个代码库的使用，我觉得呢首先你必须要知道这个代码。库的架构是什么？也就是它的结构是什么。当你理解了代码库的结构之后，你就可以理解。这个代码库是如何把各个模块代码组合在一起。首先呢我们来看一下它到底有哪些模块？

第一个模块。也是最重要的模块。我称之为事件中心。事件中心呢，我们可以认为他是一个大的循环。这个循环的过程你可以参看文档。这里我来讲一下。它的主要的作用作用分为两个方面。1首先首先是创建有关epoll的相关变量,然后通过epoll 来对事件进行操作。

2当你前面的准备工作做完之后，就可以进入这个大循环在循环的内部。他可以处理以下几种主要的任务。第一种是注册的task任务。第二种是socket的事件。Socket的事件通过call back和相应的携程进行连接。Task任务通过post task这个类。来连接各个task。

事件中心呢需要和携程相互配合使用。在这里其实携程所完成的任务就是处理具体的工作那么有哪些工作需要携程来完成呢？

1 Accept接收客户端的连接,产生connection 
2  connection的异步读取。

主要就是这两个工作当然，这两个功能的具体实现还有很多的细节。所以呢？这些细节你可以参考文档。有一个大概的认识。然后去查看源码。

需要事件中心和携程。基本上就可以完成我们代码的80%的工作。当然我们还剩下一些其他的辅助模块。这些模块包括

1调试模块主要用于日志输出。
线程锁与无所队列。
携程span 
异常描述模块
嗯，客户端模块。包括connector。
简单buffer封装
常用工具函数

这些其他模块和主模块共同完成了整个代码的功能。篇幅的原因。不能具体的详细的去。解释但是读者可以根据文档去理解代码的设计。然后具体去看对应的源码即可理解。
